2^5
stock.prices <- c(23, 27, 23, 21, 34)
names(stock.prices) <- c('Mon', 'Tues', 'Wed', 'Thu', 'Fri')
stock.prices
mean(stock.prices)
over.23 <- stock.prices > 23
over.23
stock.prices[over.23]
max(stock.prices)
mas.stock <- max(stock.prices)
stock.prices[max.stock]
stock.prices[mas.stock]
max.price <- stock.prices == max(stock.prices)
stock.prices[max.price]
1:10
A <- 1:3
b <- 4:6
B <- 4:6
rbind(A,B)
matrix(1:9, nrow = 3)
mat <- matrix(1:9, nrow = 3)
mat
is.matrix(mat)
mat2 <- matrix(1:25, byrow = T, nrow = 5)
mat2
mat2[2:3, 2:3]
mat2[4:5, 4:5]
sum(mat2)
help(runif)
matrix(runif(20, min = 0, max = 100), nrow = 4)
state.x77
x <- 10
df <- mtcars
subset(df, mpg < 20)
print('x is equal to 10')
x <- 10
if (x == 10) {
print('x is equal to 10')
}
x <- 11
if (x == 10) {
print('x is equal to 10')
}
if (x == 10) {
print('x is equal to 10')
} else if (x == 12) {
print('x is equal to 12')
} else {
print('x was not equal to 10 or 12')
}
x <- 12
if (x == 10) {
print('x is equal to 10')
} else if (x == 12) {
print('x is equal to 12')
} else {
print('x was not equal to 10 or 12')
}
temp <- 60
if (temp > 80) {
print('Hot outside!')
} else {
print('Temp is not greater than 80')
}
print(report)
ham <- 10
cheese <- 10
report <- 'blank'
if (ham >= 10 & cheese >= 10) {
report <- 'Strong sales of both ham and cheese'
} else if (ham == 0 & cheese == 0) {
report <- "No sales today!"
} else {
report <- "We sold something today!"
}
print(report)
ham <- 0
cheese <- 5
report <- 'blank'
if (ham >= 10 & cheese >= 10) {
report <- 'Strong sales of both ham and cheese'
} else if (ham == 0 & cheese == 0) {
report <- "No sales today!"
} else {
report <- "We sold something today!"
}
print(report)
print("Hello")
if (x == 1) {
print("Hello")
}
x <- 2
if (x == 1) {
print("Hello")
}
x <- 1
if (x == 1) {
print("Hello")
}
x <- 3
if ((x %% 2) != 0){
print ("Even number")
} else {
print ("Not even")
}
x <- 4
if ((x %% 2) != 0){
print ("Even number")
} else {
print ("Not even")
}
x <- 4
if ((x %% 2) = 0){
print ("Even number")
} else {
print ("Not even")
}
x <- 4
if ((x %% 2) == 0){
print ("Even number")
} else {
print ("Not even")
}
x <- 5
if ((x %% 2) == 0){
print ("Even number")
} else {
print ("Not even")
}
x <- matrix(1:10, nrow = 2)
print('not a matrix')
if (is.matrix(x) == T) {
print('is a matrix')
} else {
print('not a matrix')
}
x <- 2
if (is.matrix(x) == T) {
print('is a matrix')
} else {
print('not a matrix')
}
x <- c(3, 7, 1)
x[1]
print{x[1], x[2], x[3}
print({x[1], x[2], x[3})
print(x[1], x[2], x[3])
print(x[1] x[2] x[3])
print(x[1] & x[2] & x[3])
x
x <- c(20, 10, 1)
if (x[1] > x[2] & x[1] > x[3]) {
print(x[1])
} else if (x[1] < x[2] & x[2] > x[3]) {
print(x[2])
} else {
print(x[3])
}
x <- c(3, 7, 1)
if (x[1] > x[2] & x[1] > x[3]) {
print(x[1])
} else if (x[1] < x[2] & x[2] > x[3]) {
print(x[2])
} else {
print(x[3])
}
x <- c(3, 7, 10)
if (x[1] > x[2] & x[1] > x[3]) {
print(x[1])
} else if (x[1] < x[2] & x[2] > x[3]) {
print(x[2])
} else {
print(x[3])
}
hello_you <- function(name) {
print(paste('Hello', name))
}
hello_you('Sam')
return('Hello', name)
return(result)
product <- function(int1, int2) {
result <- int1 * int2
return(result)
}
hello_you2 <- function(name) {
hello <- 'Hello' & name
return(hello)
}
hello_you2('Sam')
hello_you2 <- function(name) {
hello <- 'Hello' name
return(hello)
}
hello_you2 <- function(name) {
hello <- 'Hello' name
return(hello)
}
product(3, 2)
product(50, 2)
num_check <- function(int1, vector1) {
if vector1[1] == int1 | vector1[2] == int1 | vector1[3] == int1 {
return(TRUE)
} else {
return(FALSE)
}
}
num_check <- function(int1, vector1) {
if vector1[1] == int1 | vector1[2] == int1 | vector1[3] == int1 {
return(TRUE)
} else
return(FALSE)
}
hello_you2 <- function(name) {
return(paste('Hello', name)
}
hello_you2 <- function(name) {
return(paste('Hello', name))
}
hello_you2('Sam')
num_check <- function(int1, vector1) {
for(num in vector1) {
if(num == int1) {
return(TRUE)
}
}
return(FALSE)
}
num_check(3, c(3,5,6))
num_check(3, c(6,5,6))
num_count <- function(int2, vec2) {
count = 0
for (num in vec2) {
if (num == int2) {
count = count + 1
}
}
return(count)
}
num_count(2, c(2,2,4,5,6,2,2,1,1,3))
bar_count <- function(total_kg) {
count <- 0
kg_big_bars <- total_kg - (total_kg %% 5)
kg_small_bars <- total_kg %% 5
total_big_bars <- kg_big_bars/5
count <- total_big_bars + kg_small_bars
return(count)
}
bar_count(6)
bar_count(17)
bar_count(15)
summer <- function(n1, n2, n3) {
sum1 = 0
for(int in summer) {
if((int %% 3) != 0) {
sum1 = sum1 + int
}
}
}
summer(7,2,3)
prime_check <- function(x) {
for (n in 1:x) {
if (x %% n == 0) {
return(FALSE)
}
}
return(TRUE)
}
prime_check(2)
prime_check <- function(x) {
for (n in 1:x) {
if (x %% n == 0) {
return(TRUE)
}
}
return(FALSE)
}
prime_check(2)
prime_check(5)
prime_check(4)
summer <- function(n1, n2, n3) {
out <- c(0)
if (n1 %% 3 != 0) {
out <- append(n1, out)
}
if (n2 %% 3 != 0) {
out <- append(n2, out)
}
if (n3 %% 3 != 0) {
out <- append(n3, out)
}
return(sum(out))
}
summer(7,2,3)
prime_check <- function(x) {
if (num == 2) {
return(TRUE)
}
for (n in 2:x-1) {
if (x %% n == 0) {
return(FALSE)
}
}
return(TRUE)
}
prime_check(4)
prime_check <- function(x) {
if (x == 2) {
return(TRUE)
}
for (n in 2:x-1) {
if (x %% n == 0) {
return(FALSE)
}
}
return(TRUE)
}
prime_check(4)
prime_check(167)
prime_check(2477)
prime_check(2011)
prime_check(7)
prime_check <- function(x) {
if (x == 2) {
return(TRUE)
}
for (n in 2:(x-1)) {
if (x %% n == 0) {
return(FALSE)
}
}
return(TRUE)
}
prime_check(7)
prime_check(2477)
prime_check(2011)
prime_check(2012)
seq(0, 10, by = 2)
sort(c(1,4,6,2,3,6,7,2,4))
sample(x = 1:10, 1)
sample(x = 1:10, 1)
sample(x = 1:10, 1)
sample(x = 1:10, 3)
addrand <- function(x) {
ran <- sample(1:100, 1)
return(x + ran)
}
addrand(2)
v <- 1:5
return(num + choice)
add_choice <- function(num, choice) {
return(num + choice)
}
add_choice(v,100)
Sys.Date()
my.date <- as.Date("Nov-03-90", format = "%b-%d-%y")
my.date
as.date("June,01,2002", format = "%B,%d,%Y")
as.Date("June,01,2002", format = "%B,%d,%Y")
as.POSIXct("11:02:03", format = "%H:%M:%S")
strptime("date", format = "")
install.packages('dplyr')
install.packages('nycflights13')
library(dplyr)
library(nycflights13)
head(flights)
summary(flights)
head(filter(flights. month == 11, day == 3, carrier = "AA"))
head(filter(flights, month == 11, day == 3, carrier = "AA"))
head(filter(flights, month == 11, day == 3, carrier == "AA"))
slice(flights, 1:10)
select(flights, carrier)
head(mtcars)
mtcars %>% mpg > 20 %>% cyl == 6
mtcars %>% filter(mpg > 20) %>% filter(cyl == 6)
head(arrange(mtcars, cyl))
head(arrange(mtcars, wt))
head(select(mtcars, mpg, hp))
distinct(mtcars, gear)
mutate(mtcars, performance = hp/wt)
summarise(mtcars, avg_mpg = mean(mpg))
mtcars %>% filter(cyl = 6) %>% summarise(std_hp = mean(hp))
mtcars %>% filter(cyl == 6) %>% summarise(std_hp = mean(hp))
head(arrange(mtcars, cyl, desc(wt)))
distinct(mtcars, gear)
distinct(select(mtcars, gear))
distinct(mtcars, gear)
mtcars %>% filter(cyl == 6) %>% summarise(std_hp = mean(hp))
install.packages('tidyr')
library(tidyr)
library(data.table)
library(data.table)
library(tidyverse)
library(ggthemes)
setwd("G:/Meu Drive/5. Cursos/Programacao/Curso R Udemy/bootcampR")
head(mpg)
ggplot(mpg) +
aes(x = hwy) +
geom_histogram()
setwd("G:/Meu Drive/5. Cursos/Programacao/Curso R Udemy/bootcampR")
rm(list = ls())
library(tidyverse)
library(ggthemes)
head(mpg)
setwd("G:/Meu Drive/5. Cursos/Programacao/Curso R Udemy/bootcampR")
rm(list = ls())
library(tidyverse)
library(ggthemes)
setwd("G:/Meu Drive/5. Cursos/Programacao/Curso R Udemy/bootcampR")
rm(list = ls())
library(tidyverse)
library(ggthemes)
head(mpg)
ggplot(mpg) +
aes(x = hwy) +
geom_histogram()
ggplot(mpg) +
aes(x = manufacturer, fill = cyl) +
geom_bar()
ggplot(mpg) +
aes(x = manufacturer, fill = factor(cyl)) +
geom_bar()
head(txhousing)
ggplot(mpg) +
aes(x = manufacturer, fill = factor(cyl)) +
geom_bar()
ggplot(txhousing) +
aes(x = sales, y = volume) +
geom_point(alpha = 0.5)
ggplot(txhousing) +
aes(x = sales, y = volume) +
geom_point(alpha = 0.5) +
geom_smooth()
setwd("G:/Meu Drive/5. Cursos/Programacao/Curso R Udemy/bootcampR")
rm(list = ls())
library(tidyverse)
library(ggthemes)
library(plotly)
pl <- ggplot(mtcars, aes(mpg, wt)) +
geom_point()
pl <- ggplot(mtcars, aes(mpg, wt)) +
geom_point()
print(pl)
gpl <- ggplotly(pl)
print(gpl)
